{"version":3,"sources":["redux/constants/userConstants.js","redux/actions/userActions.js","components/Navbar.js","redux/constants/postConstants.js","redux/actions/postActions.js","components/screens/Home.js","components/screens/SignIn.js","components/screens/Profile.js","components/screens/Signup.js","components/screens/CreatePost.js","components/screens/UserProfile.js","components/screens/SubscribesUserPosts.js","App.js","utility.js","redux/reducers/userReducer.js","redux/reducers/postReducer.js","redux/store.js","index.js"],"names":["USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","PROFILE_PICTURE_UPLOAD_REQUEST","PROFILE_PICTURE_UPLOAD_SUCCESS","PROFILE_PICTURE_UPLOAD_FAIL","PROFILE_PICTURE_UPDATE_REQUEST","PROFILE_PICTURE_UPDATE_SUCCESS","PROFILE_PICTURE_UPDATE_FAIL","LOGGED_USER_INFO_REQUEST","LOGGED_USER_INFO_SUCCESS","LOGGED_USER_INFO_FAIL","EXTERNAL_USER_FETCH_REQUEST","EXTERNAL_USER_FETCH_SUCCESS","EXTERNAL_USER_FETCH_FAIL","USER_FOLLOW_REQUEST","USER_FOLLOW_SUCCESS","USER_FOLLOW_FAIL","USER_UNFOLLOW_SUCCESS","USER_UNFOLLOW_FAIL","signin","email","password","dispatch","a","type","payload","axios","post","data","localStorage","setItem","token","JSON","stringify","message","register","name","newData","url","userLogout","clear","error","navItems","link","title","notLoggedNavItems","NavBar","user","useSelector","state","loggedUserInfo","loading","useState","loggedUser","setLoggedUser","console","log","useEffect","useDispatch","history","useHistory","isOpen","setIsOpen","activeLink","setActiveLink","renderNavItems","arrayOfItems","localNavlinkArray","map","item","key","push","NavItem","className","to","onClick","Navbar","expand","NavbarBrand","style","marginLeft","NavbarToggler","Collapse","navbar","Nav","Fragment","Button","color","POSTS_LIST_REQUEST","POSTS_LIST_SUCCESS","POSTS_LIST_FAIL","POST_LIKE_REQUEST","POST_LIKE_SUCCESS","POST_LIKE_FAIL","POST_UNLIKE_REQUEST","POST_UNLIKE_SUCCESS","POST_UNLIKE_FAIL","POST_COMMENT_REQUEST","POST_COMMENT_SUCCESS","POST_COMMENT_FAIL","POST_DELETE_REQUEST","POST_DELETE_SUCCESS","POST_DELETE_FAIL","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_PICTURE_UPLOAD_SUCCESS","POST_PICTURE_UPLOAD_FAIL","MY_POSTS_GET_REQUEST","MY_POSTS_GET_SUCCESS","MY_POSTS_GET_FAIL","MY_FOLLOWERS_POSTS_GET_REQUEST","MY_FOLLOWERS_POSTS_GET_SUCCESS","MY_FOLLOWERS_POSTS_GET_FAIL","fetchAllPosts","get","headers","Authorization","likePost","postId","put","unlikePost","makeComment","text","deletePost","delete","filter","_id","createPost","body","pic","fetchFollowingPosts","Home","props","allPosts","setAllPosts","getItem","logged","newPosts","posts","functionLikeWrapper","impresionHandler","likedPostHandler","userId","likes","includes","pop","deletePostHandler","splice","likeThePost","unlikeThePost","parse","window","location","pathname","renderItem","Col","sm","md","lg","Card","CardBody","CardTitle","postedBy","cursor","float","src","photo","alt","length","comments","record","fontWeight","onSubmit","e","preventDefault","id","Math","random","commentPostHandler","target","value","InputGroup","Input","placeholder","Container","marginTop","Row","Spinner","Signin","setPassword","setEmail","userInfo","postData","margin","onChange","Profile","fetchMyPosts","myItems","setMyItems","myPosts","mypost","updatePhotoHandler","image","FormData","append","updateProfilePicture","width","height","borderRadius","padding","files","display","justifyContent","followers","following","xs","marginBottom","Signup","setName","setImage","registerUser","CreatePost","setTitle","setBody","postDetails","maxWidth","textAlign","UserProfile","showFollow","setShowFollow","fetchedUser","externalFetchedUserInfo","userid","useParams","loggedUserId","externalUserInfoFetch","followUserHandler","followId","followUser","unfollowUserHandler","unfollowId","unfollowUser","borderBottom","SubscribesUserPosts","setLoggedUserId","Routing","userJWT","exact","path","App","updateObject","oldObject","updatedProperties","initialState","profilePicture","reducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.714ae292.chunk.js","sourcesContent":["export const USER_SIGNIN_REQUEST = \"USER_SIGNIN_REQUEST\";\r\nexport const USER_SIGNIN_SUCCESS = \"USER_SIGNIN_SUCCESS\";\r\nexport const USER_SIGNIN_FAIL = \"USER_SIGNIN_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const PROFILE_PICTURE_UPLOAD_REQUEST = \"PROFILE_PICTURE_UPLOAD_REQUEST\";\r\nexport const PROFILE_PICTURE_UPLOAD_SUCCESS = \"PROFILE_PICTURE_UPLOAD_SUCCESS\";\r\nexport const PROFILE_PICTURE_UPLOAD_FAIL = \"PROFILE_PICTURE_UPLOAD_FAIL\";\r\n\r\nexport const PROFILE_PICTURE_UPDATE_REQUEST = \"PROFILE_PICTURE_UPDATE_REQUEST\";\r\nexport const PROFILE_PICTURE_UPDATE_SUCCESS = \"PROFILE_PICTURE_UPDATE_SUCCESS\";\r\nexport const PROFILE_PICTURE_UPDATE_FAIL = \"PROFILE_PICTURE_UPDATE_FAIL\";\r\n\r\nexport const LOGGED_USER_INFO_REQUEST = \"LOGGED_USER_INFO_REQUEST\";\r\nexport const LOGGED_USER_INFO_SUCCESS = \"LOGGED_USER_INFO_SUCCESS\";\r\nexport const LOGGED_USER_INFO_FAIL = \"LOGGED_USER_INFO_FAIL\";\r\n\r\nexport const USER_LOGOUT_REQUEST = \"USER_LOGOUT_REQUEST\";\r\nexport const USER_LOGOUT_SUCCESS = \"USER_LOGOUT_SUCCESS\";\r\nexport const USER_LOGOUT_FAIL = \"USER_LOGOUT_FAIL\";\r\n\r\nexport const EXTERNAL_USER_FETCH_REQUEST = \"EXTERNAL_USER_FETCH_REQUEST\";\r\nexport const EXTERNAL_USER_FETCH_SUCCESS = \"EXTERNAL_USER_FETCH_SUCCESS\";\r\nexport const EXTERNAL_USER_FETCH_FAIL = \"EXTERNAL_USER_FETCH_FAIL\";\r\n\r\nexport const USER_FOLLOW_REQUEST = \"USER_FOLLOW_REQUEST\";\r\nexport const USER_FOLLOW_SUCCESS = \"USER_FOLLOW_SUCCESS\";\r\nexport const USER_FOLLOW_FAIL = \"USER_FOLLOW_FAIL\";\r\n\r\nexport const USER_UNFOLLOW_REQUEST = \"USER_UNFOLLOW_REQUEST\";\r\nexport const USER_UNFOLLOW_SUCCESS = \"USER_UNFOLLOW_SUCCESS\";\r\nexport const USER_UNFOLLOW_FAIL = \"USER_UNFOLLOW_FAIL\";\r\n// export const CLEAR = \"CLEAR\";\r\n// export const UPDATE = \"UPDATE\";\r\n// export const UPDATEPIC = \"UPDATEPIC\";\r\n","import {\r\n  EXTERNAL_USER_FETCH_FAIL,\r\n  EXTERNAL_USER_FETCH_REQUEST,\r\n  EXTERNAL_USER_FETCH_SUCCESS,\r\n  LOGGED_USER_INFO_FAIL,\r\n  LOGGED_USER_INFO_REQUEST,\r\n  LOGGED_USER_INFO_SUCCESS,\r\n  PROFILE_PICTURE_UPDATE_SUCCESS,\r\n  PROFILE_PICTURE_UPLOAD_FAIL,\r\n  PROFILE_PICTURE_UPLOAD_SUCCESS,\r\n  USER_FOLLOW_FAIL,\r\n  USER_FOLLOW_REQUEST,\r\n  USER_FOLLOW_SUCCESS,\r\n  USER_LOGOUT_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_UNFOLLOW_FAIL,\r\n  USER_UNFOLLOW_REQUEST,\r\n  USER_UNFOLLOW_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await axios.post(\"/signin\", { email, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"jwt\", data.token);\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst register = (name, email, password, data) => async (dispatch) => {\r\n  // dispatch({ type: PROFILE_PICTURE_UPLOAD_REQUEST, payload: data });\r\n  try {\r\n    const newData = await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/devm0uxsj/image/upload\",\r\n      data\r\n    );\r\n    let url = newData.data.url;\r\n    try {\r\n      const { data } = await axios.post(\"/signup\", {\r\n        name,\r\n        email,\r\n        password,\r\n        url,\r\n      });\r\n\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\r\n    }\r\n\r\n    dispatch({ type: PROFILE_PICTURE_UPLOAD_SUCCESS, payload: newData });\r\n  } catch (error) {\r\n    dispatch({ type: PROFILE_PICTURE_UPLOAD_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst updateProfilePicture = (data, token) => async (dispatch) => {\r\n  // dispatch({ type: PROFILE_PICTURE_UPDATE_REQUEST, payload: image });\r\n  try {\r\n    const newData = await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/devm0uxsj/image/upload\",\r\n      data\r\n    );\r\n    const url = newData.data.url;\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/updatepic\",\r\n        {\r\n          pic: url,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      );\r\n      console.log(\"DATA\", data);\r\n\r\n      dispatch({ type: PROFILE_PICTURE_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      // dispatch({ type: PROFILE_PICTURE_UPDATE_FAIL, payload: error.message });\r\n    }\r\n    // dispatch({ type: PROFILE_PICTURE_UPLOAD_SUCCESS, payload: newData });\r\n  } catch (error) {\r\n    dispatch({ type: PROFILE_PICTURE_UPLOAD_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst externalUserInfoFetch = (userid, token) => async (dispatch) => {\r\n  dispatch({ type: EXTERNAL_USER_FETCH_REQUEST });\r\n  try {\r\n    const { data } = await axios.get(`/user/${userid}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    dispatch({ type: EXTERNAL_USER_FETCH_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: EXTERNAL_USER_FETCH_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst userLogout = (localStorage) => async (dispatch) => {\r\n  try {\r\n    if (localStorage) {\r\n      localStorage.clear();\r\n    }\r\n    dispatch({ type: USER_LOGOUT_SUCCESS, payload: localStorage });\r\n  } catch (error) {\r\n    dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst fetchLoggedUser = (userid, token) => async (dispatch) => {\r\n  dispatch({ type: LOGGED_USER_INFO_REQUEST });\r\n  try {\r\n    const { data } = await axios.get(`/user/${userid}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: LOGGED_USER_INFO_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: LOGGED_USER_INFO_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst followUser = (userid, token, loggedUserId) => async (dispatch) => {\r\n  dispatch({ type: USER_FOLLOW_REQUEST });\r\n  try {\r\n    const { data } = await axios.put(\r\n      \"/follow\",\r\n      {\r\n        followId: userid,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n    console.log(\"data od fetch\", data);\r\n    dispatch({ type: USER_FOLLOW_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: USER_FOLLOW_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst unfollowUser = (userid, token) => async (dispatch) => {\r\n  dispatch({ type: USER_UNFOLLOW_REQUEST });\r\n  try {\r\n    const { data } = await axios.put(\r\n      \"/unfollow\",\r\n      {\r\n        unfollowId: userid,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n\r\n    dispatch({ type: USER_UNFOLLOW_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: USER_UNFOLLOW_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport {\r\n  signin,\r\n  register,\r\n  updateProfilePicture,\r\n  externalUserInfoFetch,\r\n  userLogout,\r\n  fetchLoggedUser,\r\n  followUser,\r\n  unfollowUser,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { userLogout } from \"../redux/actions/userActions\";\r\n\r\nconst navItems = [\r\n  { link: \"/profile\", title: \"Profile\" },\r\n  { link: \"/create\", title: \"Create\" },\r\n  { link: \"/myfollowingposts\", title: \"My Follwing Posts\" },\r\n];\r\nconst notLoggedNavItems = [\r\n  {\r\n    link: \"signin\",\r\n    title: \"Signin\",\r\n  },\r\n  {\r\n    link: \"signup\",\r\n    title: \"Signup\",\r\n  },\r\n];\r\n\r\nconst NavBar = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const { loading, loggedUserInfo } = user;\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  console.log(\"INFO\", user);\r\n\r\n  useEffect(() => {\r\n    if (loggedUserInfo) {\r\n      setLoggedUser(loggedUserInfo);\r\n    }\r\n  }, [loggedUserInfo]);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [activeLink, setActiveLink] = useState(0);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const renderNavItems = (arrayOfItems) => {\r\n    let localNavlinkArray = [];\r\n    arrayOfItems.map((item, key) => {\r\n      return localNavlinkArray.push(\r\n        <NavItem className=\"navitems\">\r\n          <NavLink\r\n            to={item.link}\r\n            onClick={() => setActiveLink(key)}\r\n            className={`nav-link-style ${activeLink === key ? \"active\" : \"\"}`}\r\n          >\r\n            {item.title}\r\n          </NavLink>\r\n        </NavItem>\r\n      );\r\n    });\r\n    return localNavlinkArray;\r\n  };\r\n\r\n  const renderList = () => {\r\n    if (loggedUser) {\r\n      return (\r\n        <React.Fragment>\r\n          {renderNavItems(navItems)}\r\n          {/* <button></button> */}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    if (!loggedUser) {\r\n      return (\r\n        <React.Fragment>{renderNavItems(notLoggedNavItems)}</React.Fragment>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar expand=\"sm\" className=\"navbar-container\">\r\n        <NavbarBrand>\r\n          <div>\r\n            <h2\r\n              style={{ marginLeft: \"10px\" }}\r\n              onClick={() => {\r\n                if (loggedUser) {\r\n                  history.push(\"/\");\r\n                } else {\r\n                  history.push(\"/signin\");\r\n                }\r\n              }}\r\n            >\r\n              Instagram{\" \"}\r\n            </h2>\r\n          </div>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar className=\"custom-nav\">\r\n          <Nav navbar>{renderList()}</Nav>\r\n          <div className=\"logout-button\">\r\n            {loggedUser ? (\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={async () => {\r\n                  await dispatch(userLogout(localStorage));\r\n                  await setLoggedUser(null);\r\n\r\n                  history.push(\"/signin\");\r\n                }}\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export const POSTS_LIST_REQUEST = \"POST_LIST_REQUEST\";\r\nexport const POSTS_LIST_SUCCESS = \"POST_LIST_SUCCESS\";\r\nexport const POSTS_LIST_FAIL = \"POST_LIST_FAIL\";\r\n\r\nexport const POST_LIKE_REQUEST = \"POST_LIKE_REQUEST\";\r\nexport const POST_LIKE_SUCCESS = \"POST_LIKE_SUCCESS\";\r\nexport const POST_LIKE_FAIL = \"POST_LIKE_FAIL\";\r\n\r\nexport const POST_UNLIKE_REQUEST = \"POST_UNLIKE_REQUEST\";\r\nexport const POST_UNLIKE_SUCCESS = \"POST_UNLIKE_SUCCESS\";\r\nexport const POST_UNLIKE_FAIL = \"POST_UNLIKE_FAIL\";\r\n\r\nexport const POST_COMMENT_REQUEST = \"POST_COMMENT_REQUEST\";\r\nexport const POST_COMMENT_SUCCESS = \"POST_COMMENT_SUCCESS\";\r\nexport const POST_COMMENT_FAIL = \"POST_COMMENT_FAIL\";\r\n\r\nexport const POST_DELETE_REQUEST = \"POST_DELETE_REQUEST\";\r\nexport const POST_DELETE_SUCCESS = \"POST_DELETE_SUCCESS\";\r\nexport const POST_DELETE_FAIL = \"POST_DELETE_FAIL\";\r\n\r\nexport const POST_CREATE_REQUEST = \"POST_CREATE_REQUEST\";\r\nexport const POST_CREATE_SUCCESS = \"POST_CREATE_SUCCESS\";\r\nexport const POST_CREATE_FAIL = \"POST_CREATE_FAIL\";\r\n\r\nexport const POST_PICTURE_UPLOAD_SUCCESS = \"POST_PICTURE_UPLOAD_SUCCESS\";\r\nexport const POST_PICTURE_UPLOAD_FAIL = \"POST_PICTURE_UPLOAD_FAIL\";\r\n\r\nexport const MY_POSTS_GET_REQUEST = \"MY_POSTS_GET_REQUEST\";\r\nexport const MY_POSTS_GET_SUCCESS = \"MY_POSTS_GET_SUCCESS\";\r\nexport const MY_POSTS_GET_FAIL = \"MY_POSTS_GET_FAIL\";\r\n\r\nexport const MY_FOLLOWERS_POSTS_GET_REQUEST = \"MY_FOLLOWERS_POSTS_GET_REQUEST\";\r\nexport const MY_FOLLOWERS_POSTS_GET_SUCCESS = \"MY_FOLLOWERS_POSTS_GET_SUCCESS\";\r\nexport const MY_FOLLOWERS_POSTS_GET_FAIL = \"MY_FOLLOWERS_POSTS_GET_FAIL\";\r\n","import axios from \"axios\";\r\nimport {\r\n  MY_FOLLOWERS_POSTS_GET_FAIL,\r\n  MY_FOLLOWERS_POSTS_GET_REQUEST,\r\n  MY_FOLLOWERS_POSTS_GET_SUCCESS,\r\n  MY_POSTS_GET_FAIL,\r\n  MY_POSTS_GET_REQUEST,\r\n  MY_POSTS_GET_SUCCESS,\r\n  POSTS_LIST_FAIL,\r\n  POSTS_LIST_REQUEST,\r\n  POSTS_LIST_SUCCESS,\r\n  POST_COMMENT_FAIL,\r\n  POST_COMMENT_REQUEST,\r\n  POST_COMMENT_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_DELETE_FAIL,\r\n  POST_DELETE_REQUEST,\r\n  POST_DELETE_SUCCESS,\r\n  POST_LIKE_FAIL,\r\n  POST_LIKE_REQUEST,\r\n  POST_LIKE_SUCCESS,\r\n  POST_PICTURE_UPLOAD_FAIL,\r\n  POST_PICTURE_UPLOAD_SUCCESS,\r\n  POST_UNLIKE_FAIL,\r\n  POST_UNLIKE_REQUEST,\r\n  POST_UNLIKE_SUCCESS,\r\n} from \"../constants/postConstants\";\r\n\r\nconst fetchAllPosts = (token) => async (dispatch) => {\r\n  dispatch({ type: POSTS_LIST_REQUEST });\r\n  try {\r\n    const { data } = await axios.get(\"/allpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    dispatch({ type: POSTS_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: POSTS_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst likePost = (postId, token) => async (dispatch) => {\r\n  dispatch({ type: POST_LIKE_REQUEST });\r\n  try {\r\n    const { data } = await axios.put(\r\n      \"/like\",\r\n      {\r\n        postId,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n    console.log(\"DATA\", data);\r\n    dispatch({ type: POST_LIKE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: POST_LIKE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst unlikePost = (postId, token) => async (dispatch) => {\r\n  dispatch({ type: POST_UNLIKE_REQUEST });\r\n  try {\r\n    const { data } = await axios.put(\r\n      \"/unlike\",\r\n      {\r\n        postId,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: POST_UNLIKE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: POST_UNLIKE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst makeComment = (postId, text, token) => async (dispatch) => {\r\n  dispatch({ type: POST_COMMENT_REQUEST });\r\n  try {\r\n    const { data } = await axios.put(\r\n      \"/comment\",\r\n      {\r\n        postId,\r\n        text,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: POST_COMMENT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: POST_COMMENT_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst deletePost = (postId, token) => async (dispatch) => {\r\n  dispatch({ type: POST_DELETE_REQUEST });\r\n  try {\r\n    const { data } = await axios.delete(`/deletepost/${postId}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    const newData = data.filter((item) => {\r\n      return item._id !== postId;\r\n    });\r\n    dispatch({ type: POST_DELETE_SUCCESS, payload: newData });\r\n  } catch (error) {\r\n    dispatch({ type: POST_DELETE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst createPost = (title, body, data, token) => async (dispatch) => {\r\n  dispatch({ type: POST_CREATE_REQUEST });\r\n  try {\r\n    const newData = await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/devm0uxsj/image/upload\",\r\n      data\r\n    );\r\n    let url = newData.data.url;\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/createpost\",\r\n        {\r\n          title,\r\n          body,\r\n          pic: url,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: POST_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: POST_CREATE_FAIL, payload: error.message });\r\n    }\r\n    dispatch({ type: POST_PICTURE_UPLOAD_SUCCESS, payload: newData });\r\n  } catch (error) {\r\n    dispatch({ type: POST_PICTURE_UPLOAD_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst fetchMyPosts = (token) => async (dispatch) => {\r\n  dispatch({ type: MY_POSTS_GET_REQUEST });\r\n  try {\r\n    const { data } = await axios.get(\"/myposts\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    dispatch({ type: MY_POSTS_GET_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: MY_POSTS_GET_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst fetchFollowingPosts = (token) => async (dispatch) => {\r\n  dispatch({ type: MY_FOLLOWERS_POSTS_GET_REQUEST });\r\n  try {\r\n    const { data } = await axios.get(\"/getsubpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    dispatch({ type: MY_FOLLOWERS_POSTS_GET_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: MY_FOLLOWERS_POSTS_GET_FAIL });\r\n  }\r\n};\r\n\r\nexport {\r\n  fetchAllPosts,\r\n  likePost,\r\n  unlikePost,\r\n  makeComment,\r\n  deletePost,\r\n  createPost,\r\n  fetchMyPosts,\r\n  fetchFollowingPosts,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Spinner, Container, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Card, CardBody, CardTitle, InputGroup, Input } from \"reactstrap\";\r\nimport {\r\n  deletePost,\r\n  fetchAllPosts,\r\n  fetchFollowingPosts,\r\n  likePost,\r\n  makeComment,\r\n  unlikePost,\r\n} from \"../../redux/actions/postActions\";\r\n\r\nconst Home = (props) => {\r\n  const history = useHistory();\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const [allPosts, setAllPosts] = useState();\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  const logged = localStorage.getItem(\"userInfo\");\r\n\r\n  let user = useSelector((state) => state.user);\r\n  const { loading, loggedUserInfo, error } = user;\r\n\r\n  let newPosts = useSelector((state) => state.posts.posts);\r\n\r\n  useEffect(() => {\r\n    if (newPosts) {\r\n      setAllPosts(newPosts.posts);\r\n    }\r\n  }, [newPosts]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const functionLikeWrapper = (type, key, postId) => {\r\n    impresionHandler(type, key, postId);\r\n    likedPostHandler(key);\r\n  };\r\n\r\n  const likedPostHandler = (key) => {\r\n    const data = [...allPosts];\r\n    const userId = loggedUserInfo.user._id;\r\n\r\n    if (data[key].likes.includes(userId)) {\r\n      data[key].likes.pop(userId);\r\n    } else {\r\n      data[key].likes.push(userId);\r\n    }\r\n\r\n    setAllPosts(data);\r\n  };\r\n\r\n  const commentPostHandler = (postId, text, key) => {\r\n    dispatch(makeComment(postId, text, token));\r\n\r\n    const data = [...allPosts];\r\n    const userId = loggedUserInfo.user._id;\r\n    data[key].comments.push({\r\n      text: text,\r\n      postedBy: {\r\n        name: loggedUserInfo.user.name,\r\n        id: userId,\r\n      },\r\n      _id: `${Math.random(0, 200000000)}`,\r\n    });\r\n\r\n    setAllPosts(data);\r\n  };\r\n\r\n  const deletePostHandler = async (postId, key) => {\r\n    await dispatch(deletePost(postId, token));\r\n    const data = [...allPosts];\r\n    data.splice(key, 1);\r\n    console.log(\"DELETED DATA\", data);\r\n    setAllPosts(data);\r\n  };\r\n\r\n  const impresionHandler = (type, key, postId) => {\r\n    if (type === \"like\") {\r\n      likeThePost(postId);\r\n    }\r\n    if (type === \"unlike\") {\r\n      unlikeThePost(postId);\r\n    }\r\n  };\r\n\r\n  const likeThePost = (postId) => dispatch(likePost(postId, token));\r\n  const unlikeThePost = (postId) => dispatch(unlikePost(postId, token));\r\n\r\n  useEffect(async () => {\r\n    if (!logged && !loggedUser) {\r\n      history.push(\"/signin\");\r\n    }\r\n    if (logged && !loading) {\r\n      setLoggedUser(JSON.parse(logged).user._id);\r\n    }\r\n    if (window.location.pathname === \"/\") {\r\n      await dispatch(fetchAllPosts(token));\r\n    }\r\n    if (window.location.pathname === \"/myfollowingposts\") {\r\n      await dispatch(fetchFollowingPosts(token));\r\n    }\r\n  }, [logged, window.location.pathname]);\r\n\r\n  const renderItem = (item, key) => (\r\n    <Col sm=\"12\" md=\"6\" lg=\"4\">\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle>\r\n            <h4 className=\"card-user-names\">\r\n              <Link\r\n                to={\r\n                  item.postedBy._id !== loggedUser\r\n                    ? `/profile/${item.postedBy._id}`\r\n                    : \"/profile\"\r\n                }\r\n              >\r\n                {item.postedBy.name}\r\n              </Link>\r\n              {item.postedBy._id == loggedUser && (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                  }}\r\n                  onClick={() => deletePostHandler(item._id, key)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h4>\r\n          </CardTitle>\r\n        </CardBody>\r\n        <div className=\"image-container\">\r\n          <img src={item.photo} alt=\"Card image cap\" />\r\n        </div>\r\n        <CardBody>\r\n          <i className=\"material-icons\" style={{ color: \"red\" }}>\r\n            {item.likes.includes(loggedUser) ? (\r\n              <i\r\n                className=\"material-icons like-button\"\r\n                onClick={() => {\r\n                  functionLikeWrapper(\"unlike\", key, item._id);\r\n                }}\r\n              >\r\n                thumb_down\r\n              </i>\r\n            ) : (\r\n              <i\r\n                className=\"material-icons like-button\"\r\n                onClick={() => {\r\n                  functionLikeWrapper(\"like\", key, item._id);\r\n                }}\r\n              >\r\n                thumb_up\r\n              </i>\r\n            )}\r\n            favorite\r\n          </i>\r\n\r\n          <h6>{item.likes.length} likes </h6>\r\n          <h6>{item.title}</h6>\r\n          <p>{item.body}</p>\r\n          <div className=\"comments-container\">\r\n            {item.comments.map((record) => {\r\n              return (\r\n                <h6 key={record._id}>\r\n                  <span style={{ fontWeight: \"500\" }}>\r\n                    {record.postedBy.name}:\r\n                  </span>\r\n                  <span style={{ fontWeight: \"350\" }}> {record.text}</span>\r\n                </h6>\r\n              );\r\n            })}\r\n          </div>\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              commentPostHandler(item._id, e.target[0].value, key);\r\n              e.target[0].value = \"\";\r\n            }}\r\n          >\r\n            <InputGroup>\r\n              <Input placeholder=\"Add comment\" />\r\n            </InputGroup>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"40px\" }}>\r\n      <Row>\r\n        {allPosts && window.location.pathname === \"/\" ? (\r\n          allPosts.map((item, key) => renderItem(item, key))\r\n        ) : (\r\n          <div className=\"text-center p-5\">\r\n            <Spinner color=\"primary\" />\r\n          </div>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signin } from \"../../redux/actions/userActions\";\r\nimport { Container, Row, Col, Input } from \"reactstrap\";\r\n\r\nconst Signin = () => {\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.user.userInfo);\r\n  console.log(\"logged user\", user);\r\n  const postData = async () => {\r\n    await dispatch(signin(email, password));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Container className=\"form-container\">\r\n      <Row className=\"justify-content-md-center card\">\r\n        <Col md=\"auto\">\r\n          <div className=\"mycard\">\r\n            {/* <div className=\"input-field\"> */}\r\n            <h2 style={{ margin: \"15px 0 15px 0\" }}>Instagram</h2>\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <div className=\"signin-button\">\r\n              <button\r\n                className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={() => postData()}\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n            <h5>\r\n              <Link to=\"/signup\">Don't have an account ?</Link>\r\n            </h5>\r\n          </div>\r\n          {/* </div> */}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchMyPosts } from \"../../redux/actions/postActions\";\r\nimport { updateProfilePicture } from \"../../redux/actions/userActions\";\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"jwt\");\r\n  useEffect(() => {\r\n    dispatch(fetchMyPosts(token));\r\n  }, []);\r\n\r\n  const [myItems, setMyItems] = useState([]);\r\n\r\n  const posts = useSelector((state) => state.posts.myPosts);\r\n  const user = useSelector((state) => state.user.loggedUserInfo);\r\n\r\n  useEffect(async () => {\r\n    if (posts) {\r\n      await setMyItems(posts.mypost);\r\n    }\r\n  }, [posts]);\r\n\r\n  const updatePhotoHandler = (image) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    let data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"cloud_name\", \"devm0uxsj\");\r\n    dispatch(updateProfilePicture(data, token));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {myItems.length < 1 ? (\r\n        <div>\r\n          {\" \"}\r\n          <Container>\r\n            <Row>\r\n              <Col sm=\"3\" className=\"d-flex flex-column \">\r\n                <img\r\n                  src={user ? user.user.pic : \"Loading...\"}\r\n                  style={{\r\n                    width: \"160px\",\r\n                    height: \"160px\",\r\n                    borderRadius: \"80px\",\r\n                    padding: \"20px\",\r\n                    margin: \" 0 auto\",\r\n                  }}\r\n                />\r\n\r\n                <label className=\"custom-file-upload\">\r\n                  Upload\r\n                  <input\r\n                    type=\"file\"\r\n                    // style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n                    onChange={(e) => {\r\n                      updatePhotoHandler(e.target.files[0]);\r\n                    }}\r\n                  />\r\n                </label>\r\n              </Col>\r\n              <Col sm=\"10\" md=\"6\">\r\n                <div>\r\n                  <h4>{user ? user.user.name : \"loading\"}</h4>\r\n                  <h4>{user ? user.user.email : \"loading\"}</h4>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <h6>{myItems.length} posts</h6>\r\n                    <h6>{user && user.user.followers.length} followers</h6>\r\n                    <h6>{user && user.user.following.length} following</h6>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      ) : (\r\n        <Container>\r\n          <Container>\r\n            <Row>\r\n              <Col sm=\"3\" className=\"d-flex flex-column \">\r\n                <img\r\n                  src={user ? user.user.pic : \"Loading...\"}\r\n                  style={{\r\n                    width: \"160px\",\r\n                    height: \"160px\",\r\n                    borderRadius: \"80px\",\r\n                    padding: \"20px\",\r\n                    margin: \" 0 auto\",\r\n                  }}\r\n                />\r\n\r\n                <label className=\"custom-file-upload\">\r\n                  Upload\r\n                  <input\r\n                    type=\"file\"\r\n                    // style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n                    onChange={(e) => {\r\n                      updatePhotoHandler(e.target.files[0]);\r\n                    }}\r\n                  />\r\n                </label>\r\n              </Col>\r\n              <Col sm=\"10\" md=\"6\">\r\n                <div>\r\n                  <h4>{user ? user.user.name : \"loading\"}</h4>\r\n                  <h4>{user ? user.user.email : \"loading\"}</h4>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <h6>{myItems.length} posts</h6>\r\n                    <h6>{user && user.user.followers.length} followers</h6>\r\n                    <h6>{user && user.user.following.length} following</h6>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container style={{ marginTop: \"90px\" }}>\r\n            <Row xs=\"12\" sm=\"2\" md=\"4\">\r\n              {posts &&\r\n                myItems.map((item) => {\r\n                  return (\r\n                    <img\r\n                      style={{\r\n                        marginBottom: \"20px\",\r\n                      }}\r\n                      key={item._id}\r\n                      className=\"item\"\r\n                      src={item.photo}\r\n                      alt={item.title}\r\n                    />\r\n                  );\r\n                })}\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { register } from \"../../redux/actions/userActions\";\r\n\r\nimport { Col, Container, Input, Row } from \"reactstrap\";\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  console.log(\"image\", image);\r\n\r\n  const dispatch = useDispatch();\r\n  // const user = useSelector((state) => state.user);\r\n\r\n  // console.log(\"PICCC\", user.profilePicture.data.secure_url);\r\n\r\n  const registerUser = async () => {\r\n    let data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"cloud_name\", \"devm0uxsj\");\r\n    dispatch(register(name, email, password, data));\r\n    history.push(\"/signin\");\r\n  };\r\n\r\n  return (\r\n    <Container className=\"form-container\">\r\n      <Row className=\"justify-content-md-center card\">\r\n        <Col md=\"auto\">\r\n          <div className=\"mycard\">\r\n            <h2 style={{ margin: \"15px 0 15px 0\" }}>Instagram</h2>\r\n            <Input\r\n              className=\"input-field\"\r\n              type=\"text\"\r\n              placeholder=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <Input\r\n              className=\"input-field\"\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              className=\"input-field\"\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n              <span className=\"upload-button \">Upload pic</span>\r\n              <Input\r\n                className=\"input-field\"\r\n                type=\"file\"\r\n                onChange={(e) => setImage(e.target.files[0])}\r\n              />\r\n            </div>\r\n            <div className=\"signin-button\">\r\n              <button\r\n                className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={() => registerUser()}\r\n              >\r\n                SignUp\r\n              </button>\r\n            </div>\r\n\r\n            <h5>\r\n              <Link to=\"/signin\">Already have an account ?</Link>\r\n            </h5>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createPost } from \"../../redux/actions/postActions\";\r\n\r\nconst CreatePost = () => {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"jwt\");\r\n\r\n  const postDetails = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"cloud_name\", \"devm0uxsj\");\r\n    await dispatch(createPost(title, body, data, token));\r\n\r\n    await history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card input-filed\"\r\n      style={{\r\n        margin: \"30px auto\",\r\n        maxWidth: \"500px\",\r\n        padding: \"20px\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"body\"\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n      />\r\n      <div className=\"file-field input-field\">\r\n        <div className=\"btn #64b5f6 blue darken-1\">\r\n          <span>Upload Image</span>\r\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n        onClick={() => postDetails()}\r\n      >\r\n        Submit post\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  followUser,\r\n  unfollowUser,\r\n  externalUserInfoFetch,\r\n} from \"../../redux/actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst UserProfile = () => {\r\n  const [userProfile, setUserProfile] = useState();\r\n\r\n  const [showFollow, setShowFollow] = useState();\r\n  // let state = true;\r\n  const fetchedUser = useSelector(\r\n    (state) => state.user.externalFetchedUserInfo\r\n  );\r\n\r\n  const { userid } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"jwt\");\r\n  const loggedUser = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n  const loggedUserId = loggedUser.user._id;\r\n\r\n  useEffect(() => {\r\n    dispatch(externalUserInfoFetch(userid, token));\r\n  }, [showFollow]);\r\n\r\n  const followUserHandler = () => {\r\n    dispatch(followUser(userid, token));\r\n    setShowFollow(false);\r\n  };\r\n\r\n  const unfollowUserHandler = () => {\r\n    dispatch(unfollowUser(userid, token));\r\n    setShowFollow(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n      {!fetchedUser ? (\r\n        <div>Loading..</div>\r\n      ) : (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              margin: \"18px 0px\",\r\n              borderBottom: \"1px solid gray\",\r\n            }}\r\n          >\r\n            <div>\r\n              <img\r\n                src={fetchedUser.user.pic}\r\n                style={{\r\n                  width: \"160px\",\r\n                  height: \"140px\",\r\n                  borderRadius: \"80px\",\r\n                  marginBottom: \"18px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>{fetchedUser.user.name}</h4>\r\n              <h4>{fetchedUser.user.email}</h4>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"108%\",\r\n                }}\r\n              >\r\n                <h6>{fetchedUser.posts.length} posts</h6>\r\n                <h6>{fetchedUser.user.followers.length} followers</h6>\r\n                <h6>{fetchedUser.user.following.length} following</h6>\r\n              </div>\r\n              {!fetchedUser.user.followers.includes(loggedUserId) ? (\r\n                <button\r\n                  className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                  onClick={() => followUserHandler()}\r\n                >\r\n                  Follow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                  onClick={() => unfollowUserHandler()}\r\n                >\r\n                  Unfollow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"gallery\">\r\n            {fetchedUser.posts.map((item) => {\r\n              return (\r\n                <img\r\n                  style={{\r\n                    margin: \"20px 20px 20px 0\",\r\n                    height: \"250px\",\r\n                    width: \"250px\",\r\n                  }}\r\n                  key={item._id}\r\n                  className=\"item\"\r\n                  src={item.photo}\r\n                  alt={item.title}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Container,\r\n  Input,\r\n  InputGroup,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchFollowingPosts,\r\n  likePost,\r\n  makeComment,\r\n  unlikePost,\r\n} from \"../../redux/actions/postActions\";\r\n\r\nconst SubscribesUserPosts = () => {\r\n  const history = useHistory();\r\n  const [allPosts, setAllPosts] = useState();\r\n  const [loggedUserId, setLoggedUserId] = useState();\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n\r\n  let user = useSelector((state) => state.user);\r\n  const { loading, loggedUserInfo, error } = user;\r\n\r\n  let newPosts = useSelector((state) => state.posts.posts);\r\n\r\n  useEffect(() => {\r\n    if (newPosts) {\r\n      setAllPosts(newPosts.posts);\r\n    }\r\n  }, [newPosts]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user.loggedUserInfo) {\r\n      setLoggedUserId(loggedUserInfo.user._id);\r\n    }\r\n  }, [user]);\r\n\r\n  const functionLikeWrapper = (type, key, postId) => {\r\n    impresionHandler(type, key, postId);\r\n    likedPostHandler(key);\r\n  };\r\n\r\n  const impresionHandler = (type, key, postId) => {\r\n    if (type === \"like\") {\r\n      likeThePost(postId);\r\n    }\r\n    if (type === \"unlike\") {\r\n      unlikeThePost(postId);\r\n    }\r\n  };\r\n\r\n  const likeThePost = (postId) => dispatch(likePost(postId, token));\r\n  const unlikeThePost = (postId) => dispatch(unlikePost(postId, token));\r\n\r\n  const likedPostHandler = (key) => {\r\n    const data = [...allPosts];\r\n    const userId = loggedUserInfo.user._id;\r\n\r\n    if (data[key].likes.includes(userId)) {\r\n      data[key].likes.pop(userId);\r\n    } else {\r\n      data[key].likes.push(userId);\r\n    }\r\n\r\n    setAllPosts(data);\r\n  };\r\n\r\n  const commentPostHandler = (postId, text, key) => {\r\n    dispatch(makeComment(postId, text, token));\r\n\r\n    const data = [...allPosts];\r\n    const userId = loggedUserInfo.user._id;\r\n    data[key].comments.push({\r\n      text: text,\r\n      postedBy: {\r\n        name: loggedUserInfo.user.name,\r\n        id: userId,\r\n      },\r\n      _id: `${Math.random(0, 200000000)}`,\r\n    });\r\n\r\n    setAllPosts(data);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    dispatch(fetchFollowingPosts(token));\r\n  }, []);\r\n\r\n  const renderItem = (item, key) => (\r\n    <Col sm=\"12\" md=\"6\" lg=\"4\">\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle>\r\n            {/* <div className=\"card home-card\" key={item._id}> */}\r\n            <h5 className=\"card-user-names\">\r\n              <Link\r\n                to={\r\n                  item.postedBy._id !== loggedUserId\r\n                    ? `/profile/${item.postedBy._id}`\r\n                    : \"/profile\"\r\n                }\r\n              >\r\n                {item.postedBy.name}\r\n              </Link>\r\n            </h5>\r\n          </CardTitle>\r\n        </CardBody>\r\n        <div className=\"image-container\">\r\n          <img src={item.photo} alt=\"Cart image cap\" />\r\n        </div>\r\n        <CardBody>\r\n          <i className=\"material-icons\" style={{ color: \"red\" }}>\r\n            {loggedUserId && item.likes.includes(loggedUserId) ? (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => {\r\n                  functionLikeWrapper(\"unlike\", key, item._id);\r\n                }}\r\n              >\r\n                thumb_down\r\n              </i>\r\n            ) : (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => {\r\n                  functionLikeWrapper(\"like\", key, item._id);\r\n                }}\r\n              >\r\n                thumb_up\r\n              </i>\r\n            )}\r\n            favorite\r\n          </i>\r\n\r\n          <h6>{item.likes.length} likes </h6>\r\n          <h6>{item.title}</h6>\r\n          <p>{item.body}</p>\r\n          <div className=\"comments-container\">\r\n            {item.comments.map((record) => {\r\n              return (\r\n                <h6 key={record._id}>\r\n                  {/* <span style={{ fontWeight: \"500\" }}> */}\r\n                  {record.postedBy.name}:{/* </span> */}\r\n                  <span style={{ fontWeight: \"350\" }}> {record.text}</span>\r\n                </h6>\r\n              );\r\n            })}\r\n          </div>\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              commentPostHandler(item._id, e.target[0].value, key);\r\n              e.target[0].value = \"\";\r\n            }}\r\n          >\r\n            <InputGroup>\r\n              <Input placeholder=\"add a comment\" />\r\n            </InputGroup>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"40px\" }}>\r\n      <Row>\r\n        {/* <div className=\"home\"> */}\r\n        {allPosts && loggedUserId ? (\r\n          allPosts.map((item, key) => renderItem(item, key))\r\n        ) : (\r\n          <div className=\"text-center p-5\">\r\n            <Spinner color=\"primary\" />\r\n          </div>\r\n        )}\r\n        {/* </div> */}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SubscribesUserPosts;\r\n","import React, { useEffect } from \"react\";\nimport \"./Custom.css\";\nimport NavBar from \"./components/Navbar\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./components/screens/Home\";\nimport Signin from \"./components/screens/SignIn\";\nimport Profile from \"./components/screens/Profile\";\nimport Signup from \"./components/screens/Signup\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UserProfile from \"./components/screens/UserProfile\";\nimport SubscribesUserPosts from \"./components/screens/SubscribesUserPosts\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchLoggedUser } from \"./redux/actions/userActions\";\n\nconst Routing = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    const userJWT = localStorage.getItem(\"jwt\");\n\n    if (user) {\n      dispatch(fetchLoggedUser(user.user._id, userJWT));\n    } else {\n      history.push(\"/signin\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route exact path=\"/create\">\n        <CreatePost />\n      </Route>\n      <Route exact path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path=\"/myfollowingposts\">\n        <SubscribesUserPosts />\n      </Route>\n    </Switch>\n  );\n};\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Routing />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import {\r\n  EXTERNAL_USER_FETCH_FAIL,\r\n  EXTERNAL_USER_FETCH_REQUEST,\r\n  EXTERNAL_USER_FETCH_SUCCESS,\r\n  LOGGED_USER_INFO_FAIL,\r\n  LOGGED_USER_INFO_REQUEST,\r\n  LOGGED_USER_INFO_SUCCESS,\r\n  PROFILE_PICTURE_UPDATE_FAIL,\r\n  PROFILE_PICTURE_UPDATE_REQUEST,\r\n  PROFILE_PICTURE_UPDATE_SUCCESS,\r\n  PROFILE_PICTURE_UPLOAD_FAIL,\r\n  PROFILE_PICTURE_UPLOAD_REQUEST,\r\n  PROFILE_PICTURE_UPLOAD_SUCCESS,\r\n  USER_FOLLOW_FAIL,\r\n  USER_FOLLOW_REQUEST,\r\n  USER_FOLLOW_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_UNFOLLOW_FAIL,\r\n  USER_UNFOLLOW_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport { updateObject } from \"../../utility\";\r\n\r\nconst initialState = {\r\n  profilePicture: null,\r\n  loggedUserInfo: null,\r\n  externalFetchedUserInfo: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_SIGNIN_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case USER_SIGNIN_SUCCESS: {\r\n      // return { loading: false, userInfo: action.payload };\r\n      return updateObject(state, {\r\n        ...state,\r\n        loading: false,\r\n        loggedUserInfo: action.payload,\r\n      });\r\n    }\r\n    case USER_SIGNIN_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n\r\n    case USER_REGISTER_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case USER_REGISTER_SUCCESS: {\r\n      return { loading: false };\r\n    }\r\n    case USER_REGISTER_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case PROFILE_PICTURE_UPLOAD_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case PROFILE_PICTURE_UPLOAD_SUCCESS: {\r\n      return { loading: false };\r\n    }\r\n    case PROFILE_PICTURE_UPLOAD_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case PROFILE_PICTURE_UPDATE_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case PROFILE_PICTURE_UPDATE_SUCCESS: {\r\n      console.log(\"PAYLOAD\", action.payload);\r\n      return updateObject(state, {\r\n        loading: false,\r\n        loggedUserInfo: {\r\n          ...state.loggedUserInfo,\r\n          user: action.payload,\r\n        },\r\n      });\r\n    }\r\n    case PROFILE_PICTURE_UPDATE_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case LOGGED_USER_INFO_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case LOGGED_USER_INFO_SUCCESS: {\r\n      return updateObject(state, {\r\n        loading: false,\r\n        loggedUserInfo: action.payload,\r\n      });\r\n    }\r\n    case LOGGED_USER_INFO_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case EXTERNAL_USER_FETCH_REQUEST: {\r\n      return updateObject(state, {\r\n        loading: true,\r\n      });\r\n    }\r\n    case EXTERNAL_USER_FETCH_SUCCESS: {\r\n      return updateObject(state, {\r\n        loading: false,\r\n        externalFetchedUserInfo: action.payload,\r\n      });\r\n    }\r\n    case EXTERNAL_USER_FETCH_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n\r\n    case USER_FOLLOW_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case USER_FOLLOW_SUCCESS: {\r\n      return {\r\n        loading: false,\r\n        data: { ...state, followers: action.payload },\r\n      };\r\n    }\r\n    case USER_FOLLOW_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case USER_UNFOLLOW_SUCCESS: {\r\n      return {\r\n        loading: false,\r\n        data: { ...state, followers: action.payload },\r\n      };\r\n    }\r\n    case USER_UNFOLLOW_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const fetchedUserReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case USER_INFO_REQUEST: {\r\n//       return { loading: true };\r\n//     }\r\n//     case USER_INFO_SUCCESS: {\r\n//       return updateObject(state, {\r\n//         loading: false,\r\n//         fetchedUserInfo: action.payload,\r\n//       });\r\n//       // return { loading: false, userInfo: action.payload };\r\n//     }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport { userReducer };\r\n","import {\r\n  MY_FOLLOWERS_POSTS_GET_FAIL,\r\n  MY_FOLLOWERS_POSTS_GET_REQUEST,\r\n  MY_FOLLOWERS_POSTS_GET_SUCCESS,\r\n  MY_POSTS_GET_FAIL,\r\n  MY_POSTS_GET_REQUEST,\r\n  MY_POSTS_GET_SUCCESS,\r\n  POSTS_LIST_FAIL,\r\n  POSTS_LIST_REQUEST,\r\n  POSTS_LIST_SUCCESS,\r\n  POST_COMMENT_FAIL,\r\n  POST_COMMENT_REQUEST,\r\n  POST_COMMENT_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_DELETE_FAIL,\r\n  POST_DELETE_REQUEST,\r\n  POST_DELETE_SUCCESS,\r\n  POST_LIKE_FAIL,\r\n  POST_LIKE_REQUEST,\r\n  POST_LIKE_SUCCESS,\r\n  POST_PICTURE_UPLOAD_FAIL,\r\n  POST_PICTURE_UPLOAD_SUCCESS,\r\n  POST_UNLIKE_FAIL,\r\n  POST_UNLIKE_REQUEST,\r\n  POST_UNLIKE_SUCCESS,\r\n} from \"../constants/postConstants\";\r\n\r\nimport { updateObject } from \"../../utility\";\r\n\r\nconst initialState = {};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case POSTS_LIST_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case POSTS_LIST_SUCCESS: {\r\n      // return { loading: false, posts: action.payload };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        posts: action.payload,\r\n      });\r\n    }\r\n    case POSTS_LIST_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case POST_LIKE_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case POST_LIKE_SUCCESS: {\r\n      // return { loading: false, likes: action.payload };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        likes: action.payload,\r\n      });\r\n    }\r\n\r\n    case POST_LIKE_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case POST_UNLIKE_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case POST_UNLIKE_SUCCESS: {\r\n      // return { loading: false, likes: action.payload };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        likes: action.payload,\r\n      });\r\n    }\r\n    case POST_UNLIKE_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case POST_COMMENT_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case POST_COMMENT_SUCCESS: {\r\n      // return { loading: false, comments: action.payload };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        comments: action.payload,\r\n      });\r\n    }\r\n    case POST_COMMENT_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case POST_DELETE_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case POST_DELETE_SUCCESS: {\r\n      // return { loading: false, posts: action.payload };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        posts: action.payload,\r\n      });\r\n    }\r\n    case POST_DELETE_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case POST_CREATE_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case POST_CREATE_SUCCESS: {\r\n      // return { loading: false, post: action.payload };\r\n      // return { loading: false };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        post: action.payload,\r\n      });\r\n    }\r\n    case POST_CREATE_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case POST_PICTURE_UPLOAD_SUCCESS: {\r\n      // return { loading: false, postPicture: action.payload };\r\n      return { loading: false };\r\n    }\r\n    case POST_PICTURE_UPLOAD_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case MY_POSTS_GET_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case MY_POSTS_GET_SUCCESS: {\r\n      // return { loading: false, myPosts: action.payload };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        myPosts: action.payload,\r\n      });\r\n    }\r\n    case MY_POSTS_GET_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    case MY_FOLLOWERS_POSTS_GET_REQUEST: {\r\n      return { loading: true };\r\n    }\r\n    case MY_FOLLOWERS_POSTS_GET_SUCCESS: {\r\n      // return { loading: false, posts: action.payload };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        posts: action.payload,\r\n      });\r\n    }\r\n    case MY_FOLLOWERS_POSTS_GET_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { postReducer };\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { fetchedUserReducer, userReducer } from \"../redux/reducers/userReducer\";\r\nimport { postReducer } from \"./reducers/postReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  posts: postReducer,\r\n  // fetchedUser: fetchedUserReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}